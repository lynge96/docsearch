@page "/"
@inject ISettingsService SettingsService

<PageTitle>Search</PageTitle>

<div class="text-center">
    <h3>Gaagle</h3>
</div>

<div class="col col-6 mx-auto">
    <div class="input-group my-5 mx-auto w-50">
        <input type="text" class="form-control" placeholder="Search" aria-label="Search" @bind="_input" @bind:event="oninput" @onkeypress="HandleKeyPress">

        <button class="btn btn-primary px-4" type="button" @onclick="Search">
            <i class="bi bi-search"></i>
        </button>
        <button type="button" class="btn btn-primary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="False">
            <span class="visually-hidden">Toggle Dropdown</span>
        </button>
        <ul class="dropdown-menu dropdown-menu-end">
            <li><a class="dropdown-item" href="#">Action</a></li>
            <li><a class="dropdown-item" href="#">Another action</a></li>
            <li><a class="dropdown-item" href="#">Something else here</a></li>
        </ul>
    </div>
    
    <div class="row col-6 mx-auto">
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault" checked="@_advancedSettings.IsCaseSensitive" @onchange="ToggleCaseSensitive">
            <label class="form-check-label" for="flexSwitchCheckDefault">Case sensitive</label>
        </div>
        <div class="form-check form-switch">
            <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault" checked="@_advancedSettings.ViewTimeStamp" @onchange="ToggleTimeStamps">
            <label class="form-check-label" for="flexSwitchCheckDefault">Time stamps</label>
        </div>
        <div class="input-group">
            <span class="input-group-text" id="basic-addon3">Search results</span>
            <input type="text" class="form-control" aria-describedby="basic-addon3" placeholder="@_advancedSettings.SearchResults" @bind="_advancedSettings.SearchResults" @onblur="SetSearchResults">
        </div>
    </div>
    <div class="row col-6 mx-auto">
        <div class="form-check">
            <input class="form-check-input" type="radio" name="usernameRadio" id="allenRadio" value="Allen" @onchange="UpdateUsername" checked="@(_username == "Allen")">
            <label class="form-check-label" for="allenRadio">
                Allen
            </label>
        </div>
        <div class="form-check">
            <input class="form-check-input" type="radio" name="usernameRadio" id="arnoldRadio" value="Arnold" @onchange="UpdateUsername" checked="@(_username == "Arnold")">
            <label class="form-check-label" for="arnoldRadio">
                Arnold
            </label>
        </div>
    </div>
    
    <div>
        <SearchResults Results="_results" Settings="_advancedSettings"></SearchResults>
    </div>

</div>


@code {
    private string? _input;

    private string? _username;

    private SearchResultDTO? _results;

    private AdvancedSettingsDTO? _advancedSettings = new();

    private ISearchService _searchService = SearchFactory.GetSearchLogic();

    protected override async Task OnInitializedAsync()
    {
        _advancedSettings = await SettingsService.GetAdvancedSettings();
    }
    
    private async void Search()
    {
        var query = _input.QuerySplitter();

        _results = await _searchService.SearchAsync(query, _username);

        StateHasChanged();
    }

    private void HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            Search();
        }
    }

    private void ToggleCaseSensitive(ChangeEventArgs e)
    {
        var isCaseSensitive = Convert.ToBoolean(e.Value);

        SettingsService.ToggleCaseSensitive(isCaseSensitive);
    }

    private void ToggleTimeStamps(ChangeEventArgs e)
    {
        var viewTimeStamps = Convert.ToBoolean(e.Value);

        SettingsService.ToggleTimeStamps(viewTimeStamps);

        _advancedSettings.ViewTimeStamp = viewTimeStamps;
    }

    private async Task SetSearchResults()
    {
        await SetSearchResults(_advancedSettings.SearchResults);
    }

    private async Task SetSearchResults(int? noOfResults)
    {
        await SettingsService.SetSearchResults(noOfResults);
    }
    
    private void UpdateUsername(ChangeEventArgs e)
    {
        _username = e.Value.ToString();
    }

}